plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id "com.diffplug.spotless" version "6.11.0"
	id 'java'
}

group = 'dev.findfirst'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
compileJava.dependsOn 'spotlessApply'


repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'com.github.oshi', name: 'oshi-core', version: '6.3.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
// optional: limit format enforcement to just the files changed by this feature branch
ratchetFrom 'origin/main'

format 'misc', {
	// define the files to apply `misc` to
	target '*.gradle', '*.md', '.gitignore'

	// define the steps to apply to those files
	trimTrailingWhitespace()
	indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
	endWithNewline()
}
java {
	// optional: you can specify import groups directly
	// note: you can use an empty string for all the imports you didn't specify explicitly, and '\\#` prefix for static imports
	importOrder('java', 'javax', 'com.acme', '', '\\#com.acme', '\\#')
	// optional: instead of specifying import groups directly you can specify a config file
	// export config file: https://github.com/diffplug/spotless/blob/main/ECLIPSE_SCREENSHOTS.md#creating-spotlessimportorder

	removeUnusedImports()

	// Choose one of these formatters.
	googleJavaFormat()   // has its own section below

	formatAnnotations()  // fixes formatting of type annotations, see below

	//licenseHeader '/* (C) $YEAR */' // or licenseHeaderFile
}
}
